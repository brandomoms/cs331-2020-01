#!./degu.lua
# isort.deg
# Glenn G. Chappell
# 2020-04-27
#
# For CS F331 / CSCE A331 Spring 2020
# Degu Example: Insertion Sort


# All functions deal with array "data", whose length is given by
# variable "datalen". We assume datalen >= 0, and items in data have
# indices 0 .. datalen-1.


# Function initData
# Pushes initial, unsorted values into array data (described above).
func initData()
    # Function push
    # Do a "push back" of value v in data. Increases datalen by 1.
    func push()
        data[datalen] = v
        datalen = datalen+1
    end

    v = 13   push()
    v = 86   push()
    v = -5   push()
    v = 0    push()
    v = 43   push()
    v = 6    push()
    v = 28   push()
    v = 4    push()
    v = 17   push()
    v = 6    push()
    v = 39   push()
    v = -85  push()
    v = 1    push()
    v = 6    push()
    v = 18   push()
    v = 34   push()
    v = 12   push()
    v = 3    push()
    v = 77   push()
    v = 9    push()
    v = 28   push()
    v = -1   push()
end


# Function printData
# Output items in array "data" (described above) on a single line, with
# items separated by blanks, and the entire dataset followed by a
# newline.
func printData()
    i = 0
    while i < datalen
        if i > 0
            print(" ")
        end
        print(data[i])
        i = i+1
    end
    print("\n")
end


# Function insertionSort
# Sort array data (described above), in ascending order, using Insertion
# Sort.
func insertionSort()
    i = 1  # Index of item to insert among previous items
    while i < datalen
        savedata_i = data[i]  # Save item to insert
        k = i                 # Spot we are looking at
        done = false          # Have we found proper spot yet?
        while k > 0 and not done
            if not(savedata_i < data[k-1])
                done = true   # Degu has no "break", so we do this
            else
                data[k] = data[k-1]
                k = k-1
            end
        end
        # k is the spot where savedata_i goes; put it there
        data[k] = savedata_i

        i = i+1
    end
end


# Main Program
# Print unsorted data, sort it, and print result.

# Print heading
print("Degu - Insertion Sort Demo\n\n")

# Make initial data
initData()

# Print initial data
print("Initial data:\n")
printData()
print("\n")

# Sort
print("Sorting\n")
insertionSort()
print("\n")

# Print sorted data
print("Sorted data:\n")
printData()

